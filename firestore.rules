rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Allow reading any election document
    match /elections/{electionId} {
      allow read: true;
      
      // Allow creating new elections
      allow create: if
        // Validate election document structure
        request.resource.data.title is string &&
        request.resource.data.title.size() > 0 &&
        request.resource.data.candidates is list &&
        request.resource.data.candidates.size() > 0 &&
        request.resource.data.votes is list &&
        request.resource.data.createdAt is string;
      
      // Allow updating only the votes array
      allow update: if
        // Only allow adding to the votes array
        request.resource.data.diff(resource.data).affectedKeys().hasOnly(['votes']) &&
        // Validate vote structure
        request.resource.data.votes.size() == resource.data.votes.size() + 1 &&
        validateVoteStructure(request.resource.data.votes.getLast());
    }
    
    function validateVoteStructure(vote) {
      return vote.voterName is string &&
             vote.voterName.size() > 0 &&
             vote.ranking is list &&
             vote.approved is list &&
             vote.timestamp is string;
    }
  }
}
